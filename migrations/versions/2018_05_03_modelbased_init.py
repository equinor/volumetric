"""modelbased_init

Revision ID: ef2a24e0e5c0
Revises: 
Create Date: 2018-05-03 07:19:16.294729

"""
from alembic import op, context
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'ef2a24e0e5c0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data') == 'true':
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data') == 'true':
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model', sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('user', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name', 'user'))
    op.create_table('faultblock', sa.Column(
        'id', sa.Integer(), nullable=False),
                    sa.Column('model_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['model_id'], ['model.id'],
                        onupdate='CASCADE',
                        ondelete='CASCADE'), sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('model_id', 'name'))
    op.create_table('zone', sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('model_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['model_id'], ['model.id'],
                        onupdate='CASCADE',
                        ondelete='CASCADE'), sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('model_id', 'name'))
    op.create_table('location', sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('faultblock_id', sa.Integer(), nullable=False),
                    sa.Column('zone_id', sa.Integer(), nullable=False),
                    sa.Column('facies', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['faultblock_id'], ['faultblock.id'],
                        onupdate='CASCADE',
                        ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(
                        ['zone_id'], ['zone.id'],
                        onupdate='CASCADE',
                        ondelete='CASCADE'), sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('faultblock_id', 'zone_id'))
    op.create_table(
        'volumetrics', sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('location_id', sa.Integer(), nullable=False),
        sa.Column('realization', sa.Integer(), nullable=False),
        sa.Column('grv', sa.Numeric(precision=20, scale=2), nullable=True),
        sa.Column('nrv', sa.Numeric(precision=20, scale=2), nullable=True),
        sa.Column('npv', sa.Numeric(precision=20, scale=2), nullable=True),
        sa.Column('hcpv', sa.Numeric(precision=20, scale=2), nullable=True),
        sa.Column('stoiip', sa.Numeric(precision=20, scale=2), nullable=True),
        sa.ForeignKeyConstraint(
            ['location_id'], ['location.id'],
            onupdate='CASCADE',
            ondelete='CASCADE'), sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('location_id', 'realization'))
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('volumetrics')
    op.drop_table('location')
    op.drop_table('zone')
    op.drop_table('faultblock')
    op.drop_table('model')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
