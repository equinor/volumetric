"""add_group_access

Revision ID: 89b4d1b83f85
Revises: 828d58d2e6c2
Create Date: 2019-05-08 08:18:56.647099

"""
from alembic import op, context
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '89b4d1b83f85'
down_revision = '828d58d2e6c2'
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data') == 'true':
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data') == 'true':
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user', sa.Column('shortname', sa.String(), nullable=False), sa.PrimaryKeyConstraint('shortname'))
    op.create_table('role', sa.Column('user', sa.String(), nullable=False),
                    sa.Column('field', sa.String(), nullable=False), sa.Column('role', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['field'],
                        ['field.name'],
                    ), sa.ForeignKeyConstraint(
                        ['user'],
                        ['user.shortname'],
                    ), sa.PrimaryKeyConstraint('user', 'field'))
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('role')
    op.drop_table('user')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
