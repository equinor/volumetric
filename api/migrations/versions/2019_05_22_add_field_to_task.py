"""add_field_to_task

Revision ID: 8d883d840600
Revises: 3bafb236af9e
Create Date: 2019-05-22 13:02:14.878227

"""
from alembic import op, context
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '8d883d840600'
down_revision = '3bafb236af9e'
branch_labels = None
depends_on = None


def upgrade():
    schema_upgrades()
    if context.get_x_argument(as_dictionary=True).get('data') == 'true':
        data_upgrades()


def downgrade():
    if context.get_x_argument(as_dictionary=True).get('data') == 'true':
        data_downgrades()
    schema_downgrades()


def schema_upgrades():
    """schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('TRUNCATE TABLE tasks')
    op.create_unique_constraint(None, 'case', ['name', 'case_version', 'field_name'])
    op.add_column('tasks', sa.Column('field_name', sa.String(), nullable=False))
    op.create_foreign_key(None, 'tasks', 'field', ['field_name'], ['name'], onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###


def schema_downgrades():
    """schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'field_name')
    op.drop_constraint(None, 'case', type_='unique')
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""
    pass


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
    pass
