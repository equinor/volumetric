version: '3.4'

services:
  proxy:
    build: proxy
    depends_on:
      - web
      - api
    volumes:
      - ./proxy/x.volumetric.equinor.com.key:/etc/nginx/ssl/x.volumetric.equinor.com.key
    networks:
      - sec-scan

  web:
    image: git.equinor.com:4567/volumetric/web:master
    command: serve --single build --listen 3000
    env_file:
      - secrets.env
    networks:
      - sec-scan

  api:
    image: $BUILD_IMAGE
    depends_on:
      - db
      - redis
      - worker
    env_file:
      - secrets.env
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_USER=volumetric
      - POSTGRES_DB=volumetric
      - AZURE_APP_CLIENT_ID=c049f236-7e38-41ba-be77-287bc1c8543c
      - AZURE_KEYS_URI=https://login.microsoftonline.com/common/discovery/v2.0/keys
      - AUTHENTICATION=False
    volumes:
      - ./uploads:/code/instance/uploads
    networks:
      - sec-scan

  redis:
    image: redis:5.0-alpine
    restart: unless-stopped
    networks:
      - sec-scan

  worker:
    image: $BUILD_IMAGE
    command: ["worker"]
    env_file:
      - secrets.env
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_USER=volumetric
      - POSTGRES_DB=volumetric
      - FLASK_ENV=development
      - AZURE_APP_CLIENT_ID=c049f236-7e38-41ba-be77-287bc1c8543c
      - AZURE_KEYS_URI=https://login.microsoftonline.com/common/discovery/v2.0/keys
    volumes:
      - ./uploads:/code/instance/uploads:ro
    networks:
      - sec-scan

  db:
    image: postgres:10.2-alpine
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    volumes:
      - ./init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - secrets.env
    environment:
      - POSTGRES_USER=volumetric
      - POSTGRES_DB=volumetric
    networks:
      - sec-scan

networks:
  sec-scan:
