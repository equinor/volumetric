version: '3.4'

services:
  proxy:
    build: proxy/local_development
    ports:
      - 80:80
    depends_on:
      - web
      - api

  web:
    build:
      context: ../web
      args:
        UID: $DOCKER_USER
        GID: $DOCKER_GROUP
    image: git.equinor.com:4567/volumetric/web
    volumes:
      - ./../web:/code

  api:
    build:
      context: ../api
      args:
        UID: $DOCKER_USER
        GID: $DOCKER_GROUP
    image: git.equinor.com:4567/volumetric/api
    volumes:
    - ./../api:/code
      - ./uploads:/code/instance/uploads
    depends_on:
      - db
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_USER=volumetric
      - POSTGRES_DB=volumetric
      - FLASK_ENV=development
      - AZURE_APP_CLIENT_ID=c049f236-7e38-41ba-be77-287bc1c8543c
      - AZURE_KEYS_URI=https://login.microsoftonline.com/common/discovery/v2.0/keys

  redis:
    image: redis:5.0-alpine
    #command: ["--loglevel", "verbose"]

  worker:
    build:
      context: ../api
      args:
        UID: $DOCKER_USER
        GID: $DOCKER_GROUP
    image: git.equinor.com:4567/volumetric/api
    command: ["worker"]
    volumes:
    - ./../api:/code
      - ./uploads:/code/instance/uploads:ro
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_USER=volumetric
      - POSTGRES_DB=volumetric
      - FLASK_ENV=development
      - AZURE_APP_CLIENT_ID=c049f236-7e38-41ba-be77-287bc1c8543c
      - AZURE_KEYS_URI=https://login.microsoftonline.com/common/discovery/v2.0/keys

  db:
    image: postgres:10.2-alpine
#    command: postgres -c 'log_statement=mod'
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./../api/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    environment:
      - POSTGRES_USER=volumetric
      - POSTGRES_DB=volumetric
